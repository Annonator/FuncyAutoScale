{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string"
      },
      "virtualMachineName": {
        "type": "string"
      },
      "virtualMachineSize": {
        "type": "string"
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "IceBird"
      },
      "adminPublicKey": {
        "type": "string"
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS"
      },
      "diagnosticsStorageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS"
      },
      "addressPrefix": {
        "type": "string"
      },
      "subnetName": {
        "type": "string"
      },
      "subnetPrefix": {
        "type": "string"
      },
      "publicIpAddressType": {
        "type": "string",
        "defaultValue": "Dynamic"
      },
      "numberStorageAccounts": {
        "type": "int",
        "defaultValue": 5
      },
      "storageId": {
        "type": "int",
        "defaultValue": 1
      } 
    },
    "variables": {
      "storageAccountName": "[concat(toLower(resourceGroup().name), 'ibdisk')]",
      "diagnosticsStorageAccountName": "[concat(toLower(resourceGroup().name), 'diag')]",
      "numberStorageAccounts": "[parameters('numberStorageAccounts')]",
      "publicIpAddressName": "[concat('PIP', parameters('virtualMachineName'))]",
      "networkInterfaceName": "[concat('NIC', parameters('virtualMachineName'))]",
      "vmName": "[parameters('virtualMachineName')]",
      "extensionName": "DockerExtension",
      "customExtensionName": "CustomExtension",    
      "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', concat(resourceGroup().name, 'subsiege-vnet'))]",
      "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
      "networkSecurityGroupName": "[concat(resourceGroup().name, 'subsiege-nsg')]",
      "virtualNetworkName": "[concat(resourceGroup().name, 'subsiege-vnet')]"
    },
    "resources": [
      {
        "name": "[parameters('virtualMachineName')]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2016-03-30",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
          "['DiskCopy']",
          "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
        ],
        "properties": {
          "osProfile": {
            "computerName": "[parameters('virtualMachineName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPublicKey')]"
                  }
                ]
              }
            }
          },
          "hardwareProfile": {
            "vmSize": "[parameters('virtualMachineSize')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04.0-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "[parameters('virtualMachineName')]",
              "createOption": "fromImage",
              "vhd": {
                "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', concat(variables('storageAccountName'), parameters('storageId'))), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '.vhd')]"
              }
            },
            "dataDisks": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
            }
          }
        }
      },
      {
        "name": "[concat(variables('storageAccountName'), copyIndex())]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2015-06-15",
        "location": "[parameters('location')]",
        "copy": {
          "name": "DiskCopy",
          "count": "[variables('numberStorageAccounts')]"
        },
        "properties": {
          "accountType": "[parameters('storageAccountType')]"
        }
      },
      {
        "name": "[variables('diagnosticsStorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2015-06-15",
        "location": "[parameters('location')]",
        "properties": {
          "accountType": "[parameters('diagnosticsStorageAccountType')]"
        }
      },
      {
        "name": "[variables('virtualNetworkName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2016-09-01",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[parameters('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('networkInterfaceName')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2016-09-01",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
          "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
          "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
          }
        }
      },
      {
        "name": "[variables('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2016-09-01",
        "location": "[parameters('location')]",
        "properties": {
          "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
        }
      },
      {
        "name": "[variables('networkSecurityGroupName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2016-09-01",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-ssh",
              "properties": {
                "priority": 1000,
                "sourceAddressPrefix": "*",
                "protocol": "TCP",
                "destinationPortRange": "22",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "gameserver",
              "properties": {
                "priority": 100,
                "sourceAddressPrefix": "*",
                "protocol": "Udp",
                "destinationPortRange": "27015-27017",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "TS3",
              "properties": {
                "priority": 200,
                "sourceAddressPrefix": "*",
                "protocol": "*",
                "destinationPortRange": "9987",
                "access": "Allow",
                "direction": "Inbound",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      }
    }
  }